# -*- coding: utf-8 -*-
"""ETL_Nepotismo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TPm23yZVZWJnXv96mCOPd26_6-smqykS
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd 


path = '/content/drive/MyDrive/BaseNepotismo/Coleta/nepotismo.csv'


dataset = pd.read_csv(path,sep = ';',encoding='ISO-8859-1')

#dataset.to_excel(r'/content/drive/MyDrive/BaseNepotismo/Coleta/dataset.xlsx', index=False)

dataset['Nome'] = dataset['Nome'].replace({',': ' '}, regex=True)
dataset['Nome'] = dataset['Nome'].replace({'-': ' '}, regex=True)
dataset = dataset.replace({'  ': ' '}, regex=True)

dataset = dataset.replace({',':' '}, regex=True)
dataset = dataset.replace({"'":' '}, regex=True)





dataset = dataset.replace({None: ' '}, regex=True)

#Utiliza Regex para pegar o utimo conjunto de caracteres do nome depois do espaço
import re

def retornaSobrenome(nome): 

  Sobrenome = re.search("[^\/]\w+$", nome).group(0)
  #print(Sobrenome)
  return Sobrenome

dataset['sobrenome']=dataset['Nome'].apply(retornaSobrenome)

dataset_ibge=pd.read_csv('/content/drive/MyDrive/BaseNepotismo/Coleta/Base_ibge.csv',sep = ';')




dataset_ibge.rename(columns={'Nome': 'Cidade'},inplace=True)

def EncontraSigla(Localidade):

  df3=dataset_ibge['sigla'][dataset_ibge["Cidade"] == Localidade]
 

  return df3.iloc[0]
  

def EncontraCod(Localidade):

  df3=dataset_ibge['cod_ibge'][dataset_ibge["Cidade"] == Localidade]
  

  return df3.iloc[0]
  


dataset['cod_ibge']=dataset['Cidade'].apply(EncontraCod)

!pip install validate_docbr

#Valida os CPFS 
from validate_docbr import CPF
cpf = CPF()
cpfsValidos=[]
for cpfs in dataset['cpf']:
  if(cpf.validate(cpfs)):
    cpfsValidos.append(cpfs)

#remove os cpfs não validos 

cpfsValidos=pd.DataFrame(cpfsValidos)

cpfsValidos.rename(columns={0: 'cpf',},inplace=True)
cpfsValidos


dataset = dataset.merge(cpfsValidos, how = 'inner' , on = 'cpf')

#Separando o dataFrame em Tres partes pelo tipo do cargo

FactIndicados = pd.DataFrame(dataset[dataset['Tipo Cargo']=='Indicado'])

Dim_IndicadoresEleitos=dataset[dataset['Tipo Cargo']=='Eleito']
Dim_IndicadoresEleitos=pd.DataFrame(Dim_IndicadoresEleitos)

Dim_IndicadoresConcursados=dataset[dataset['Tipo Cargo']=='Concursado']
Dim_IndicadoresConcursados=pd.DataFrame(Dim_IndicadoresConcursados)


Dim_Indicadores=pd.concat([Dim_IndicadoresEleitos,Dim_IndicadoresConcursados])

df = FactIndicados.merge(Dim_Indicadores, how = 'inner' , on = 'Sobrenome')

df['nepotismo']=1

df1=df.loc[:,['Nome_x','Cargo_x','Tipo Cargo_x','cpf_x','Sobrenome','nepotismo','cod_ibge_x']]
df2=df.loc[:,['Nome_y','Cargo_y','Tipo Cargo_y','cpf_y','Sobrenome','nepotismo','cod_ibge_y']]

df2.rename(columns={'Nome_y': 'Nome',
                   'Cargo_y':'Cargo',
                   'Tipo Cargo_y':'Tipo Cargo',
                   'cpf_y':'cpf',
                    'cod_ibge_y':'cod_ibge'},inplace=True)
df2=df2.drop_duplicates()

df1.rename(columns={'Nome_x': 'Nome',
                   'Cargo_x':'Cargo',
                   'cpf_x':'cpf',
                    'cod_ibge_x':'cod_ibge'},inplace=True)
df1=df1.drop_duplicates()

FactIndicados=FactIndicados.loc[~FactIndicados['cpf'].isin(df1['cpf'])]
FactIndicados['nepotismo']=0


FactIndicados=pd.concat([FactIndicados,df1])


FactIndicados = FactIndicados.fillna(' ')

FactIndicados['Tipo Cargo']= FactIndicados['Tipo Cargo']+FactIndicados['Tipo Cargo_x']

FactIndicados=FactIndicados.drop(columns='Tipo Cargo_x')

Dim_Indicadores=Dim_Indicadores.loc[~Dim_Indicadores['cpf'].isin(df2['cpf'])]
Dim_Indicadores['nepotismo']=0

Dim_Indicadores=Dim_Indicadores.drop(columns='Cidade')


Dim_Indicadores=pd.concat([Dim_Indicadores,df2])

Dim_Indicadores.rename(columns={'Sobrenome': 'sobrenome',},inplace=True)

Dim_localidade=pd.DataFrame()



Dim_localidade=dataset_ibge.merge(FactIndicados, how = 'inner' , on = 'Cidade')

Dim_localidade=Dim_localidade.loc[:,['Cidade','sigla','cod_ibge_x']]


Dim_localidade.rename(columns={'cod_ibge_x': 'cod_ibge'},inplace=True)

Dim_localidade=Dim_localidade.drop_duplicates()

Dim_Indicadores.to_csv(r'/content/drive/MyDrive/BaseNepotismo/Tratamento/Dim_Indicadores.csv', index=False)

Dim_localidade.to_csv(r'/content/drive/MyDrive/BaseNepotismo/Tratamento/Dim_localidade.csv', index=False)

FactIndicados.to_csv(r'/content/drive/MyDrive/BaseNepotismo/Tratamento/FactIndicados.csv', index=False)